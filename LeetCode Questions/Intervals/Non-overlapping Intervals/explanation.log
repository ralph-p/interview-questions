Problem:
    Given a collection of intervals, find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.
    Input: [[1,2],[2,3],[3,4],[1,3]]
    Output: 1
    Explanation: [1,3] can be removed and the rest of intervals are non-overlapping.

Solution:
    Sort by starting interval values

    loop through the elements starting at the second element
    Check if current element intersects with previous element, if so remove interval with the highest end

    Time: O(n log n) because of the sorting
    Space: O(n) since we sort the input array in place and we store the inital end point